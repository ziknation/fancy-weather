!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);n(1);var a={coordinates:{latitude:"",longitude:""},place:{country:"",city:""},weather:{current:{sky:"",temperature:"",feelsLike:"",wind:"",humidity:""},day1:{sky:"",temperature:""},day2:{sky:"",temperature:""},day3:{sky:"",temperature:""}}};function r(e){!function(e){const t=document.querySelectorAll(".forecast--general_information-text-place")[0],n=document.querySelectorAll(".forecast--main_information-temperature")[0],a=document.querySelectorAll(".forecast--main_information-addition")[0];t.innerHTML=e.place.city+", "+e.place.country,n.innerHTML=e.weather.current.temperature+'<span class="forecast--main_information-temperature-span">&deg;</span>',a.innerHTML=`${e.weather.current.sky} <br>\n  Feels like: ${e.weather.current.feelsLike} &deg;<br>\n  Wind: ${e.weather.current.wind} m/s <br>\n  Humidity: ${e.weather.current.humidity} %`}(e),function(e){document.querySelectorAll(".location--coordinates")[0].innerHTML=`Latitude: ${e.coordinates.latitude} <br>\n  Longitude: ${e.coordinates.longitude}`}(e),function(e){const t=document.querySelectorAll(".forecast--general_information-img")[0],n=document.querySelectorAll(".day_1_img")[0],a=document.querySelectorAll(".day_2_img")[0],r=document.querySelectorAll(".day_3_img")[0];t.src=`/src/img/animated/${e.weather.current.sky}.svg`,t.alt=e.weather.current.sky,n.src=`/src/img/animated/${e.weather.day1.sky}.svg`,n.alt=e.weather.day1.sky,a.src=`/src/img/animated/${e.weather.day2.sky}.svg`,a.alt=e.weather.day2.sky,r.src=`/src/img/animated/${e.weather.day3.sky}.svg`,r.alt=e.weather.day3.sky}(e),function(e){const t=document.querySelectorAll(".day_1_temp")[0],n=document.querySelectorAll(".day_2_temp")[0],a=document.querySelectorAll(".day_3_temp")[0],r=document.querySelectorAll(".forecast--next_days")[0].childNodes,i=new Date,s=new Date(i.getFullYear(),i.getMonth(),i.getDate()+1),o=new Date(s.getFullYear(),s.getMonth(),s.getDate()+1),c=new Date(o.getFullYear(),o.getMonth(),o.getDate()+1);r[1].childNodes[1].innerHTML=s.toDateString().split(" ")[0],r[3].childNodes[1].innerHTML=o.toDateString().split(" ")[0],r[5].childNodes[1].innerHTML=c.toDateString().split(" ")[0],t.innerHTML=e.weather.day1.temperature+"&deg;",n.innerHTML=e.weather.day2.temperature+"&deg;",a.innerHTML=e.weather.day3.temperature+"&deg;"}(e),function(e){const t=e.coordinates.latitude,n=e.coordinates.longitude;ymaps.ready((function(){new ymaps.Map("map",{center:[t,n],zoom:9,controls:[]})}))}(e)}var i=async function(e){const t=`https://api.openweathermap.org/data/2.5/forecast?q=${e.place.city}&lang=en&units=metric&APPID=1f69c21cbdecced9f5e422b5efb63930`;let n=await fetch(t);!function(e,t){t.weather.current.sky=e.list[0].weather[0].main,t.weather.current.temperature=Math.round(e.list[0].main.temp),t.weather.current.feelsLike=Math.round(e.list[0].main.feels_like),t.weather.current.wind=Math.round(e.list[0].wind.speed),t.weather.current.humidity=+e.list[0].main.humidity,t.weather.day1.sky=e.list[8].weather[0].main,t.weather.day1.temperature=Math.round(e.list[8].main.temp),t.weather.day2.sky=e.list[16].weather[0].main,t.weather.day2.temperature=Math.round(e.list[16].main.temp),t.weather.day3.sky=e.list[24].weather[0].main,t.weather.day3.temperature=Math.round(e.list[24].main.temp),r(t)}(await n.json(),e)};var s=async function(e){let t=`https://api.opencagedata.com/geocode/v1/json?&q=${e.coordinates.latitude}+${e.coordinates.longitude}&key=e42603ebcd574a43819b2249318b655a`,n=await fetch(t),a=await n.json();e.place.country=a.results[0].components.country,e.place.city=a.results[0].components.city,i(e)};var o=async function(){!function(e){a.coordinates.latitude=e[0],a.coordinates.longitude=e[1],s(a)}((await fetch("https://ipinfo.io/json?token=680fc6f5c1667a").then(e=>e.json())).loc.split(","))};document.body.insertAdjacentHTML("afterbegin",'<header>\n<div class="wrapper">\n  <div class="controls">\n    <div class="controls--refresh"><img src="./src/img/refreshFront.png" alt="refreshFront"></div>\n    <select class="controls--language">\n      <option value="en">EN</option>\n      <option value="ru">RU</option>\n      <option value="be">BE</option>\n    </select>\n    <div class="controls--units">\n      <p class="controls--units-fahrenheit">F</p>\n      <p class="controls--units-celsius">C</p>\n    </div>        \n  </div>\n  <form class="search">\n    <input type="text" class="search--text">\n    <input type="submit" value="SEARCH" class="search--submit">\n  </form>\n</div>\n</header>\n\n<main>\n<div class="forecast">\n  <div class="forecast--general_information">\n    <div class="forecast--general_information-text">\n      <p class="forecast--general_information-text-place"></p>\n      <p class="forecast--general_information-text-date">Mon 28 October 17:23</p>\n    </div>\n    <img src="/src/img/animated/weather.svg" alt="weatherSVG" class="forecast--general_information-img">\n  </div>\n  <div class="forecast--main_information">\n    <p class="forecast--main_information-temperature"><p>\n    <p class="forecast--main_information-addition"></p>\n  </div>\n  <div class="forecast--next_days">\n    <div class="forecast--next_days-first">\n      <p class="forecast--next_days-first-day"></p>\n      <div class="next_days_wrapper">\n        <div class="forecast--next_days-first-icon next_days_icon">\n          <p class="day_1_temp">7&deg;</p>\n        </div>\n        <img src="/src/img/animated/weather.svg" alt="weatherSVG" class="next_days_img day_1_img">\n      </div>\n    </div>\n    <div class="forecast--next_days-second">\n      <p class="forecast--next_days-second-day">Wednesday</p>\n      <div class="next_days_wrapper">\n        <div class="forecast--next_days-second-icon next_days_icon">\n          <p class="day_2_temp">7&deg;</p>\n        </div>\n        <img src="/src/img/animated/weather.svg" alt="weatherSVG" class="next_days_img day_2_img">\n      </div>\n    </div>\n    <div class="forecast--next_days-third">\n      <p class="forecast--next_days-third-day">Thursday</p>\n      <div class="next_days_wrapper">\n        <div class="forecast--next_days-third-icon next_days_icon">\n          <p class="day_3_temp">7&deg;</p>\n        </div>\n        <img src="/src/img/animated/weather.svg" alt="weatherSVG" class="next_days_img day_3_img">\n      </div>\n    </div>\n  </div>\n</div>\n<div class="location">\n  <div id="map" class="location--map"></div>\n  <div class="location--coordinates"></div>\n</div>\n</main>');setInterval((function(){const e=new Date;let t=document.querySelectorAll(".forecast--general_information-text-date")[0],n=e.toDateString().split(" ")[0],a=e.getDate(),r=e.toDateString().split(" ")[1],i=e.getHours(),s=e.getMinutes()<=9?"0"+e.getMinutes():e.getMinutes(),o=e.getSeconds()<=9?"0"+e.getSeconds():e.getSeconds();t.innerHTML=`${n} ${a} ${r}\n  ${i}:${s}:${o}`}),1e3);o()},function(e,t){}]);